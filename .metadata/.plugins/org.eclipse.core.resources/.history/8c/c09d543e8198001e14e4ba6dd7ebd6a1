package br.com.arcoiris.rest;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.google.gson.Gson;

import br.com.arcoiris.bd.Conexao;
import br.com.arcoiris.jdbc.JDBCBookDAO;
import br.com.arcoiris.jdbc.JDBCLoanDAO;
import br.com.arcoiris.modelo.Book;
import br.com.arcoiris.modelo.Loan;

@Path("loan")
public class LoanRest extends UtilRest {

	@POST
	@Path("/insert")
	@Consumes("application/*")
	public Response insert(String loanParam) {
		try {
			Loan loan = new Gson().fromJson(loanParam, Loan.class);
			Conexao conec = new Conexao();
			Connection conexao = conec.abrirConexao();

			JDBCLoanDAO jdbcLoan = new JDBCLoanDAO(conexao);
			boolean retorno = jdbcLoan.insert(loan);
			String msg = "";

			if (retorno) {
				msg = "Emprestimo cadastrado com sucesso";
			} else {
				msg = "Erro ao cadastrar emprestimo";
			}

			conec.fecharConexao();

			return this.buildResponse(msg);

		} catch (Exception e) {
			e.printStackTrace();
			return this.buildErrorResponse(e.getMessage());
		}
	}
	
	@GET
	@Path("/getAllLoans")
	@Produces(MediaType.APPLICATION_JSON)
	public Response getAllLoans() {

		try {
			List<Loan> listLoans = new ArrayList<Loan>();

			Conexao conec = new Conexao();
			Connection conexao = conec.abrirConexao();
			
			JDBCLoanDAO jdbcLoan = new JDBCLoanDAO(conexao);
			listLoans = jdbcLoan.getLoans();
			
			conec.fecharConexao();
			String json = new Gson().toJson(listLoans);
			return this.buildResponse(json);
		} catch (Exception e) {
			e.printStackTrace();
			return this.buildErrorResponse(e.getMessage());
		}

	}
}
